@model IEnumerable<LibraryApp.Web.ViewModels.BookLoanViewModel>
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Catalogue des livres";
}

<div class="row align-items-center mb-4">
    <div class="col-md-6">
        <h2 class="mb-0">ðŸ“š Catalogue des livres</h2>
    </div>
    <div class="col-md-6 text-md-end">
        <a asp-action="Create" class="btn btn-primary">+ Ajouter un livre</a>
    </div>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <div class="row g-3 align-items-center">
            <div class="col-md-5">
                <form asp-action="Search" method="get" class="d-flex">
                    <input type="text" name="keyword" class="form-control me-2" placeholder="Rechercher un livre..." />
                    <button type="submit" class="btn btn-primary">Rechercher</button>
                </form>
            </div>
            <div class="col-md-7">
                <form asp-action="Filter" method="get" class="d-flex gap-2">
                    <input type="text" name="author" placeholder="Auteur" class="form-control" />
                    <input type="text" name="genre" placeholder="Genre" class="form-control" />
                    <input type="number" name="minYear" placeholder="AnnÃ©e min" class="form-control" />
                    <button type="submit" class="btn btn-secondary">Filtrer</button>
                </form>
            </div>
        </div>
        <div class="d-flex flex-wrap gap-2 mt-3">
            <a asp-action="TopBorrowed" class="btn btn-info btn-sm">Top empruntÃ©s</a>
            <a asp-action="Recent" class="btn btn-warning btn-sm">RÃ©cents</a>
            <div class="dropdown">
                <button class="btn btn-outline-dark btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    Trier
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Title" asp-route-asc="true">Titre â†‘</a></li>
                    <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Title" asp-route-asc="false">Titre â†“</a></li>
                    <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Author" asp-route-asc="true">Auteur â†‘</a></li>
                    <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Author" asp-route-asc="false">Auteur â†“</a></li>
                    <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Year" asp-route-asc="true">AnnÃ©e â†‘</a></li>
                    <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Year" asp-route-asc="false">AnnÃ©e â†“</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    @foreach (var bookLoan in Model)
    {
        var book = bookLoan.Book;
        var userId = HttpContextAccessor.HttpContext?.Session.GetString("UserId");

        <div class="col">
            <div class="card h-100 shadow-sm border-0">
                @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                {
                    <img src="@book.CoverImageUrl" class="card-img-top" alt="Couverture de @book.Title" style="height: 250px; object-fit: cover;">
                }
                else
                {
                    <div class="d-flex align-items-center justify-content-center bg-light text-muted" style="height: 250px;">
                        <span>Pas d'image de couverture</span>
                    </div>
                }
                
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title text-primary">@book.Title</h5>
                    <p class="card-text text-muted mb-1">Auteur : @book.Author</p>
                    <p class="card-text text-muted mb-1">Genre : @book.Genre</p>
                    <p class="card-text text-muted mb-3">AnnÃ©e : @book.PublicationYear</p>

                    <p class="card-text">
                        Copies : @book.CopiesAvailable / @book.TotalCopies
                        @if (book.IsAvailable)
                        {
                            <span class="badge bg-success ms-2">Disponible</span>
                        }
                        else
                        {
                            <span class="badge bg-danger ms-2">Non disponible</span>
                        }
                    </p>

                    <div class="mt-auto d-flex flex-wrap gap-2">
                        <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-sm btn-outline-info">DÃ©tails</a>
                        <a asp-action="Edit" asp-route-id="@book.Id" class="btn btn-sm btn-outline-warning">Modifier</a>
                        <a asp-action="Delete" asp-route-id="@book.Id" class="btn btn-sm btn-outline-danger">Supprimer</a>

                        @* Logique pour l'emprunt/retour *@
                        @if (book.IsAvailable && userId != null)
                        {
                            <form asp-action="Borrow" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="bookId" value="@book.Id" />
                                <input type="hidden" name="userId" value="@userId" />
                                <button type="submit" class="btn btn-sm btn-success">Emprunter</button>
                            </form>
                        }
                        @if (bookLoan.Loans != null && bookLoan.Loans.Any(l => l.UserId == userId))
                        {
                            <form asp-action="Return" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="loanId" value="@bookLoan.Loans.FirstOrDefault(l => l.UserId == userId).Id" />
                                <button type="submit" class="btn btn-sm btn-secondary">Retour</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>