@model LibraryApp.Web.DTOs.BookDetailsDto
@{
    ViewData["Title"] = "Détails du livre";
}

<div class="row justify-content-center">
    <div class="col-lg-10">
        <div class="card shadow-sm border-0">
            <div class="card-body p-4">
                <div class="row">
                @* Colonne de l'image de couverture *@
                    <div class="col-md-4 text-center mb-4 mb-md-0">
                        @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                        {
                            <img src="@Model.CoverImageUrl" class="img-fluid rounded shadow" alt="Couverture de @Model.Title" style="max-height: 400px; object-fit: contain;">
                        }
                        else
                        {
                            <div class="d-flex align-items-center justify-content-center bg-light text-muted rounded shadow" style="height: 400px;">
                                <span>Pas d'image</span>
                            </div>
                        }
                    </div>
                    
                    @* Colonne des détails du livre *@
                    <div class="col-md-8">
                        <h1 class="card-title text-primary">@Model.Title</h1>
                        <h4 class="text-muted mb-4">par @Model.Author</h4>
                        
                        <dl class="row">
                            <dt class="col-sm-4">ISBN</dt>
                            <dd class="col-sm-8">@Model.ISBN</dd>

                            <dt class="col-sm-4">Genre</dt>
                            <dd class="col-sm-8">@Model.Genre</dd>
                            
                            <dt class="col-sm-4">Année de publication</dt>
                            <dd class="col-sm-8">@Model.PublicationYear</dd>
                            
                            <dt class="col-sm-4">Éditeur</dt>
                            <dd class="col-sm-8">@Model.Publisher</dd>

                            <dt class="col-sm-4">Langue</dt>
                            <dd class="col-sm-8">@Model.Language</dd>

                            <dt class="col-sm-4">Pages</dt>
                            <dd class="col-sm-8">@Model.PageCount</dd>

                            <dt class="col-sm-4">Images</dt>
                            <dd class="col-sm-8">@Model.CoverImageUrl</dd>
                        </dl>
                        
                        <h5 class="mt-4 mb-2">Résumé</h5>
                        <p>@Model.Summary</p>
                    </div>
                </div>
            </div>
            
            @* Pied de la carte pour les boutons d'action *@
            <div class="card-footer bg-light d-flex justify-content-end gap-2">
                @if(Context.Session.GetString("Role") != "User")
                {
                    <a asp-controller="Books" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Modifier</a>
                    <a asp-controller="Books" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Supprimer</a>
                }
                <a asp-controller="Books" asp-action="Index" class="btn btn-secondary">Retour à la liste</a>
                @if(Context.Session.GetString("UserId") !=null)
                {
                    <form asp-controller="Books" asp-action="AddToCart" method="post">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-success btn-lg" 
                            @(Model.CopiesAvailable == 0 ? "disabled" : "")>
                            Ajouter au panier
                        </button>
                    </form>
                }

            </div>
        </div>

        @* Historique des emprunts dans une carte séparée *@
        @if(Context.Session.GetString("Role") != "User")
        {
            <div class="card shadow-sm mt-4">
                <div class="card-body p-4">
                    <h4 class="mb-3">Historique des emprunts</h4>
                    @if (Model.BorrowHistory.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-primary">
                                    <tr>
                                        <th>Utilisateur</th>
                                        <th>Code copie</th>
                                        <th>Emprunté le</th>
                                        <th>Retour prévu</th>
                                        <th>Retour réel</th>
                                        <th>Amende</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var loan in Model.BorrowHistory.OrderByDescending(l => l.BorrowedAt))
                                    {
                                        <tr>
                                            <td>@loan.UserId</td>
                                            <td>@loan.CopyCode</td>
                                            <td>@loan.BorrowedAt.ToShortDateString()</td>
                                            <td>@loan.DueDate.ToShortDateString()</td>
                                            <td>@(loan.ReturnedAt.HasValue 
                                                ? loan.ReturnedAt.Value.ToShortDateString() 
                                                : "Non retourné")</td>
                                            <td>@loan.Fine.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Aucun emprunt enregistré pour ce livre.</p>
                    }
                </div>
            </div>
        }
    </div>
</div>