@model IEnumerable<LibraryApp.Web.ViewModels.BookLoanViewModel>
@inject IHttpContextAccessor HttpContextAccessor
@{

    ViewData["Title"] = "Catalogue des livres";
}

<h2 class="mb-4">ðŸ“š Catalogue des livres</h2>

<div class="mb-3 d-flex justify-content-between align-items-center">
    <a asp-action="Create" class="btn btn-success">+ Ajouter un livre</a>

    <form asp-action="Search" method="get" class="d-flex">
        <input type="text" name="keyword" class="form-control me-2" placeholder="Rechercher un livre..." />
        <button type="submit" class="btn btn-primary">Rechercher</button>
    </form>
</div>

<form asp-action="Filter" method="get" class="mb-3 d-flex gap-2">
    <input type="text" name="author" placeholder="Auteur" class="form-control" />
    <input type="text" name="genre" placeholder="Genre" class="form-control" />
    <input type="number" name="minYear" placeholder="AnnÃ©e min" class="form-control" />
    <button type="submit" class="btn btn-secondary">Filtrer</button>
</form>

<div class="mb-3 d-flex gap-2">
    <a asp-action="TopBorrowed" class="btn btn-info">Top empruntÃ©s</a>
    <a asp-action="Recent" class="btn btn-warning">RÃ©cents</a>

    <div class="dropdown">
        <button class="btn btn-outline-dark dropdown-toggle" type="button" data-bs-toggle="dropdown">
            Trier
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Title" asp-route-asc="true">Titre â†‘</a></li>
            <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Title" asp-route-asc="false">Titre â†“</a></li>
            <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Author" asp-route-asc="true">Auteur â†‘</a></li>
            <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Author" asp-route-asc="false">Auteur â†“</a></li>
            <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Year" asp-route-asc="true">AnnÃ©e â†‘</a></li>
            <li><a class="dropdown-item" asp-action="Sorted" asp-route-sortBy="Year" asp-route-asc="false">AnnÃ©e â†“</a></li>
        </ul>
    </div>
</div>

<h1>@HttpContextAccessor.HttpContext.Session.GetString("UserId")</h1>
<h3>Bienvenue, @Context.Session.GetString("UserId")</h3>
<table class="table table-hover table-bordered align-middle">
    <thead class="table-dark">
        <tr>
            <th>Titre</th>
            <th>Auteur</th>
            <th>Genre</th>
            <th>AnnÃ©e</th>
            <th>Copies</th>
            <th>Disponibles</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var book in Model)
    {
        <tr>
            <td>@book.Book.Title</td>
            <td>@book.Book.Id</td>
            <td>@book.Book.Author</td>
            <td>@book.Book.Genre</td>
            <td>@book.Book.PublicationYear</td>
            <td>@book.Book.TotalCopies</td>
            <td>@book.Book.CopiesAvailable</td>
            <td>@book.Book.IsAvailable</td>
            <td>
                <a asp-action="Details" asp-route-id="@book.Book.Id" class="btn btn-sm btn-info">DÃ©tails</a>
                <a asp-action="Edit" asp-route-id="@book.Book.Id" class="btn btn-sm btn-warning">Modifier</a>
                <a asp-action="Delete" asp-route-id="@book.Book.Id" class="btn btn-sm btn-danger">Supprimer</a>

            @if (book.Book.IsAvailable && !book.Book.Copies.Any(c => c.BorrowedBy == HttpContextAccessor.HttpContext.Session.GetString("UserId")))
            {
                <form asp-action="Borrow" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="bookId" value="@book.Book.Id" />
                    <input type="hidden" name="userId" value="@HttpContextAccessor.HttpContext.Session.GetString("UserId")" />
                    <button type="submit" class="btn btn-sm btn-success">Emprunter</button>
                </form>
            }
            else
            {



                @if (book.Loans != null && book.Loans.Any())
                {
                    @foreach (var loan in book.Loans)
                    {
                        @if(loan.UserId == @HttpContextAccessor.HttpContext.Session.GetString("UserId") && loan.BookId == book.Book.Id)
                        {
                            
                            <form asp-action="Return" method="post" class="d-inline">
                                <input type="hidden" name="loanId" value="@loan.Id" />
                                <button type="submit" class="btn btn-sm btn-secondary">Retour</button>
                            </form>
                        }
                    }
                }
                else
                {
                    <p>Aucun livre disponible</p>
                }
            }
        
            </td>
            @foreach (var copy in book.Book.Copies)
            {
             <td>
                @if(copy.BorrowedBy == HttpContextAccessor.HttpContext.Session.GetString("UserId"))
                {
                    <span class="badge bg-success">EmpruntÃ©e par vous</span>
                }
                else if (!string.IsNullOrEmpty(copy.BorrowedBy))
                {
                    <span class="badge bg-warning text-dark">EmpruntÃ©e</span>
                }
                else
                {
                    <span class="badge bg-primary">Disponible</span>
                }
             </td>

            }
        </tr>
    }
    </tbody>
</table>
